# 리스트(list) 자료형
# 여러개의 값을 변수 1개에 저장
# 숫자와 문자를 같이 사용할 수 있음
# 인덱싱은 정수를 추출
# 슬라이싱은 리스트 자체를 추출, 즉 원형을 유지한 상태로 추출.

# [1, 2 , 3, 4, 5, 6, 7]
# [1, 1, 1, 1, 1]
# ["Hello", "World", "Python"]
# [1, "hello", 2, "WOW"]
# [1, 2, ["hello", "World"]],
# []


# li_1 = [1, 2, 3]
# print(li_1[0])
# print(li_1[1])
# print(li_1[2])
# print(li_1[-1])

# print(li_1[0] + li_1[1])

# li_2 = [1, 2, 3, [4, 5, 6]]
# print(li_2[3][0])

# 컴퓨터에서의 행, 렬 표현법
# [[1, 2, 3],
# [4, 5, 6],
# [7, 8, 9]]

# print(li_2[3][0:2])

# li_3 = [1, 2, 3, 4, 5]

#출력 결과가 [2, 3]이 되도록

# print(li_3[1:3])

# print(len(li_3))

# li_3[0] = 10

# print(li_3)


# append(원소)
# 리스트의 마지막에 원소를 추가

# li_4 = [1, 2, 3]
# li_4.append(4)
# print(li_4)

# insert(인덱스, 원소)
# 인덱스 위치에 원소 삽입

# li = [1, 2, 3]
# li.insert(1, 10)
# print(li)

# remove(값)
# 리스트에서 함수에 입력된 값과 같은 값을 찾아 삭제함
# 먼저 나오는 값만 삭제
# 리스트에 없는 값을 삭제하려고 하면 에러

# li = [1, 2, 3]
# li.remove(2)
# print(li) #[1, 3]

# pop(인덱스)
# 리스트의 인덱스 위치의 요소를 꺼낸다
# 인덱스를 함수에 전달하지 않으면 제일 마지막 요소를 꺼낸다

# li = [1, 2, 3, 4]
# li.pop()
# print(li) 
# li.pop(1)
# print(li)

# li = [1, 2, 3, 4]

# a = li.pop()
# print(a)

# b = li.pop(0)
# print(b)

# index(값)
# 리스트에서 값을 찾아 그 값의 인덱스를 돌려준다
# 리스트에 없는 값을 입력하면 에러


# li = [1, 2, 3]
# idx = li.index(2) # 1
# print(idx)

# idx = 인덱스의 변수의 값을 저장할 때 주로 쓰는 약어


# sort()
# 소트, 정렬 함수
# 리스트의 요소를 정렬한다.

# li = [5, 2, 3, 1, 4, 7, 6]
# li.sort() # 오름차순 정렬
# print(li)

# li.sort(reverse = True) # 내림차순 정렬
# print(li)


# reverse()
# 리스트의 순서를 뒤집는 함수
# 정렬 아님

# li = [5, 2, 1, 4, 3]
# li.reverse()
# print(li) # [3, 4, 1, 2, 5]


# count(값)
# 리스트 안에서 해당 값이 몇 개 있는지 세는 함수
# li = [1, 2, 3, 4, 5, 1, 1, 2]
# cnt = li.count(1)
# print(cnt)

# cnt = 카운트 함수의 값을 저장할 때 주로 쓰는 약어



## 연산자
# + 연산자
# 리스트를 연결한다.
# extend(리스트) 함수와 같다.

# li_1 = [1, 2, 3]
# li_2 = [4, 5, 6]
# print(li_1 + li_2) # [1, 2, 3, 4, 5, 6]

# li_1.extend(li_2)

# * 연산자
# 리스트를 반복한다

# li = [1, 2, 3]
# print(li * 3) # [1, 2, 3, 1, 2, 3, 1, 2, 3]